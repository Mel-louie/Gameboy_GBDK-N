                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.4 #11941 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _gbt_update
                                     13 	.globl _gbt_loop
                                     14 	.globl _gbt_play
                                     15 	.globl _wait_vbl_done
                                     16 	.globl _set_interrupts
                                     17 	.globl _disable_interrupts
                                     18 	.globl _enable_interrupts
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; absolute external ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _DABS (ABS)
                                     30 ;--------------------------------------------------------
                                     31 ; global & static initialisations
                                     32 ;--------------------------------------------------------
                                     33 	.area _HOME
                                     34 	.area _GSINIT
                                     35 	.area _GSFINAL
                                     36 	.area _GSINIT
                                     37 ;--------------------------------------------------------
                                     38 ; Home
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _HOME
                                     42 ;--------------------------------------------------------
                                     43 ; code
                                     44 ;--------------------------------------------------------
                                     45 	.area _CODE
                                     46 ;src/main.c:41: void main()
                                     47 ;	---------------------------------
                                     48 ; Function main
                                     49 ; ---------------------------------
      000000                         50 _main::
                                     51 ;src/main.c:43: disable_interrupts();
      000000 CDr00r00                52 	call	_disable_interrupts
                                     53 ;src/main.c:45: gbt_play(song_Data, 2, 7);
      000003 11 02 07                54 	ld	de, #0x0702
      000006 D5                      55 	push	de
      000007 21r00r00                56 	ld	hl, #_song_Data
      00000A E5                      57 	push	hl
      00000B CDr00r00                58 	call	_gbt_play
      00000E E8 04                   59 	add	sp, #4
                                     60 ;src/main.c:46: gbt_loop(0);
      000010 AF                      61 	xor	a, a
      000011 F5                      62 	push	af
      000012 33                      63 	inc	sp
      000013 CDr00r00                64 	call	_gbt_loop
      000016 33                      65 	inc	sp
                                     66 ;src/main.c:48: set_interrupts(VBL_IFLAG);
      000017 3E 01                   67 	ld	a, #0x01
      000019 F5                      68 	push	af
      00001A 33                      69 	inc	sp
      00001B CDr00r00                70 	call	_set_interrupts
      00001E 33                      71 	inc	sp
                                     72 ;src/main.c:49: enable_interrupts();
      00001F CDr00r00                73 	call	_enable_interrupts
                                     74 ;src/main.c:51: while (1)
      000022                         75 00102$:
                                     76 ;src/main.c:53: wait_vbl_done();
      000022 CDr00r00                77 	call	_wait_vbl_done
                                     78 ;src/main.c:55: gbt_update(); // This will change to ROM bank 1.
      000025 CDr00r00                79 	call	_gbt_update
                                     80 ;src/main.c:57: }
      000028 18 F8                   81 	jr	00102$
                                     82 	.area _CODE
                                     83 	.area _CABS (ABS)
